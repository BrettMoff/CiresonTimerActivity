<SequentialWorkflowActivity x:Class="WorkflowAuthoring.Timer_Activity_Workflow" x:Name="Timer_Activity_Workflow" xmlns:ns0="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.ActivityLibrary;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.ActivityLibrary, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WindowsPowerShellScript x:Name="windowsPowerShellScript1" ScriptBody="$enumActive = (Get-SCSMEnumeration ActivityStatusEnum.Active$).Id&#xD;&#xA;$enumOnHold = (Get-SCSMEnumeration ActivityStatusEnum.OnHold$).Id&#xD;&#xA;$enumCompleted = (Get-SCSMEnumeration ActivityStatusEnum.Completed$).Id&#xD;&#xA;&#xD;&#xA;$ActiveTimers = get-scsmobject -class(get-scsmclass -name timer_Activity) -filter &quot;Status -eq $enumActive -or Status -eq $enumOnHold&quot;&#xD;&#xA;&#xD;&#xA;Try {&#xD;&#xA;    ForEach ($Activity in $ActiveTimers) {&#xD;&#xA;        If ((Get-Date) -gt $Activity.ScheduledEndTime) {&#xD;&#xA;            $ActivityHash = @{&quot;Status&quot; = $enumCompleted}&#xD;&#xA;            Set-SCSMObject -SMObject $Activity -PropertyHashTable $ActivityHash&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;Catch{&#xD;&#xA;    out-file &quot;C:\temp\timererror.log&quot; -InputObject $_.exception.message -append&#xD;&#xA;}" TaskID="Timer_Activity_Workflow.WindowsPowerShellScript.fb9d7a78_fbc2_443f_92db_452501c45d39" SnapIns="{x:Null}" ScriptName="{x:Null}" PropertyToBind="{x:Null}" Parameter="{x:Null}">
		<ns0:WindowsPowerShellScript.Parameters>
			<x:Array Type="{x:Type p7:ActivityParameter}" xmlns:p7="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.Common;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.Common, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		</ns0:WindowsPowerShellScript.Parameters>
	</ns0:WindowsPowerShellScript>
</SequentialWorkflowActivity>